version: '2.1'

services:
  master-server:
    image: cso2-master-server
    build: ./master-server
    environment:
      NODE_ENV: development
      SERVICE_80_NAME: master-server
      SERVICE_80_TAGS: backends
    ports:      
      - 30001:30001
      - 30002:30002
    command: >
      bash -c "npm run build-ts &&
              npm run start -- --interface eth0"
    networks:
      - cso2
      - consul

  users-service:
    image: cso2-users-service
    build: ./users-service
    environment:
      NODE_ENV: development
      SERVICE_80_NAME: users-service
      SERVICE_80_TAGS: backends
    ports:      
      - 30100:30100
    depends_on:
      - mongo
    networks:
      - cso2
      - consul

  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db

  consul:
    hostname: consul
    container_name: consul
    image: consul:latest
    restart: always
    volumes:
      - consul:/etc/consul.d
    command: -ui
    ports:
      - 8500:8500
    entrypoint:
      - consul
      - agent      
      - -ui 
      - -server
      - -config-dir=/etc/consul.d
      - -bind={{ GetInterfaceIP "eth0" }}
      - -client=0.0.0.0
      - -dev
    networks:
      - consul
    labels:
      - SERVICE_IGNORE # Tell Registrator to ignore this container
  
  registrator:
    container_name: registrator
    command: -internal consul://consul:8500
    privileged: true
    image: gliderlabs/registrator:latest
    restart: always
    links:
      - consul
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    networks:
      - consul

networks:
  cso2:
  consul:
    external:
      name: consul

volumes:
  consul:
  mongo: